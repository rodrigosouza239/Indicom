{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_RENDER } from \"../actions/ApplicationActions\";\nvar initialState = {\n  render: true\n};\n\nvar applicationReducer = function applicationReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_RENDER:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          render: action.data\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default applicationReducer;","map":{"version":3,"sources":["/home/bayons/indicom-app-master/app/redux/reducers/ApplicationReducer.js"],"names":["SET_RENDER","initialState","render","applicationReducer","state","action","type","data"],"mappings":";;;;;;AAAA,SAASA,UAAT;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE;AADW,CAArB;;AAIA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,UAAL;AAAiB;AACf,+CACKI,KADL;AAEEF,UAAAA,MAAM,EAAEG,MAAM,CAACE;AAFjB;AAID;;AACD;AAAS;AACP,eAAOH,KAAP;AACD;AATH;AAWD,CAZD;;AAcA,eAAeD,kBAAf","sourcesContent":["import { SET_RENDER } from '../actions/ApplicationActions';\n\nconst initialState = {\n  render: true,\n};\n\nconst applicationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_RENDER: {\n      return {\n        ...state,\n        render: action.data,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default applicationReducer;\n"]},"metadata":{},"sourceType":"module"}