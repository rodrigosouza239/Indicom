{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/rodrigo/indicom/app/components/AtividadesContainer/AtividadesContainer.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useNavigation } from '@react-navigation/native';\nimport ApplicationContext from \"../../contexts/application\";\nimport AuthContext from \"../../contexts/auth\";\nimport Styles from \"./Styles\";\nimport Api from \"../../services/Api\";\nimport Button from \"../Button\";\nimport Dropdown from \"../Dropdown\";\nimport CheckboxList from \"./CheckboxList\";\n\nvar RamoAtividade = function RamoAtividade() {\n  var _useContext = useContext(ApplicationContext),\n      setLoading = _useContext.setLoading;\n\n  var _useContext2 = useContext(AuthContext),\n      user = _useContext2.user,\n      setUser = _useContext2.setUser;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      list = _useState2[0],\n      setList = _useState2[1];\n\n  var navigation = useNavigation();\n\n  var handleCadastro = function handleCadastro() {\n    var ramoAtividades, response, newUser;\n    return _regeneratorRuntime.async(function handleCadastro$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ramoAtividades = [];\n            list.map(function (categoria) {\n              return categoria.data.map(function (subCategoria) {\n                return subCategoria.checked && ramoAtividades.push(subCategoria.id);\n              });\n            });\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(Api.post(\"v1/users/\" + user.id + \"/activities\", {\n              activities: ramoAtividades\n            }));\n\n          case 4:\n            response = _context.sent;\n\n            if (!(response.status !== 200)) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Alert.alert('Atenção', 'Houve um erro no servidor'));\n\n          case 7:\n            newUser = _objectSpread(_objectSpread({}, user), {}, {\n              activities: response.data.activities\n            });\n            console.log(newUser);\n            setUser(newUser);\n            return _context.abrupt(\"return\", navigation.navigate('MeuPerfil'));\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleOpen = function handleOpen(item) {\n    var newList = list.map(function (i) {\n      if (i.id === item.id && !item.open) return _objectSpread(_objectSpread({}, i), {}, {\n        open: true\n      });\n      return _objectSpread(_objectSpread({}, i), {}, {\n        open: false\n      });\n    });\n    setList(newList);\n  };\n\n  var handleCheck = function handleCheck(item) {\n    var newList = list.map(function (categoria) {\n      var newData = categoria.data.map(function (subCategoria) {\n        return subCategoria.id === item.id ? _objectSpread(_objectSpread({}, subCategoria), {}, {\n          checked: !subCategoria.checked\n        }) : subCategoria;\n      });\n      return _objectSpread(_objectSpread({}, categoria), {}, {\n        data: newData\n      });\n    });\n    setList(newList);\n  };\n\n  useEffect(function () {\n    var fetchApiData = function fetchApiData() {\n      var activitiesList, response, activities;\n      return _regeneratorRuntime.async(function fetchApiData$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              activitiesList = user.activities.map(function (i) {\n                return i.id;\n              });\n              setLoading(true);\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(Api.get('v1/activities'));\n\n            case 4:\n              response = _context2.sent;\n\n              if (response.status !== 200) {\n                Alert.alert('Erro', 'Houve um erro no servidor, tente novamente mais tarde');\n              } else {\n                setLoading(false);\n                activities = response.data.map(function (activity) {\n                  var nest = activity.nest.map(function (subActivity) {\n                    return {\n                      id: subActivity.id,\n                      label: subActivity.name,\n                      checked: activitiesList.includes(subActivity.id)\n                    };\n                  });\n                  return {\n                    id: activity.id,\n                    label: activity.name,\n                    open: false,\n                    data: nest\n                  };\n                });\n                setList(activities);\n              }\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchApiData();\n  }, []);\n  return React.createElement(View, {\n    style: Styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: Styles.socialMediaContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, user.type == \"PJ\" && list.filter(function (i) {\n    return i.label !== 'EMPREGO/TRABALHO';\n  }).map(function (item) {\n    return React.createElement(Dropdown, {\n      key: item.id,\n      onPress: function onPress() {\n        return handleOpen(item);\n      },\n      handleOpen: item.open,\n      label: item.label,\n      style: Styles.dropdownContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, React.createElement(CheckboxList, {\n      handleCheck: handleCheck,\n      items: item.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }));\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: Styles.empregoTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"Ofertas de Emprego\"), React.createElement(Text, {\n    style: Styles.empregoSubTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"Ofere\\xE7a vagas de servi\\xE7o\")), list.filter(function (i) {\n    return i.label === 'EMPREGO/TRABALHO';\n  }).map(function (item) {\n    return React.createElement(Dropdown, {\n      key: item.id,\n      onPress: function onPress() {\n        return handleOpen(item);\n      },\n      handleOpen: item.open,\n      label: item.label,\n      style: Styles.dropdownContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, React.createElement(CheckboxList, {\n      handleCheck: handleCheck,\n      items: item.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }));\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    onPress: handleCadastro,\n    customStyles: {\n      backgroundColor: '#00C068',\n      marginTop: 15,\n      width: '100%',\n      alignSelf: 'center'\n    },\n    textColor: \"#FFF\",\n    label: \"SALVAR\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default RamoAtividade;","map":{"version":3,"sources":["/Users/rodrigo/indicom/app/components/AtividadesContainer/AtividadesContainer.jsx"],"names":["React","useState","useEffect","useContext","useNavigation","ApplicationContext","AuthContext","Styles","Api","Button","Dropdown","CheckboxList","RamoAtividade","setLoading","user","setUser","list","setList","navigation","handleCadastro","ramoAtividades","map","categoria","data","subCategoria","checked","push","id","post","activities","response","status","Alert","alert","newUser","console","log","navigate","handleOpen","item","newList","i","open","handleCheck","newData","fetchApiData","activitiesList","get","activity","nest","subActivity","label","name","includes","wrapper","socialMediaContainer","type","filter","dropdownContainer","empregoTitle","empregoSubTitle","backgroundColor","marginTop","width","alignSelf"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { View, Alert, Text } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport ApplicationContext from '../../contexts/application';\nimport AuthContext from '../../contexts/auth';\nimport Styles from './Styles';\nimport Api from '../../services/Api';\n\nimport Button from '../Button';\nimport Dropdown from '../Dropdown';\nimport CheckboxList from './CheckboxList';\n\nconst RamoAtividade = () => {\n  const { setLoading } = useContext(ApplicationContext);\n  const { user, setUser } = useContext(AuthContext);\n  // console.log(user);\n  const [list, setList] = useState([]);\n  const navigation = useNavigation();\n\n  const handleCadastro = async () => {\n    const ramoAtividades = [];\n    list.map((categoria) =>\n      categoria.data.map(\n        (subCategoria) =>\n          subCategoria.checked && ramoAtividades.push(subCategoria.id)\n      )\n    );\n    const response = await Api.post(`v1/users/${user.id}/activities`, {\n      activities: ramoAtividades,\n    });\n    if (response.status !== 200)\n      return Alert.alert('Atenção', 'Houve um erro no servidor');\n    const newUser = {\n      ...user,\n      activities: response.data.activities,\n    };\n    console.log(newUser);\n    setUser(newUser);\n    return navigation.navigate('MeuPerfil');\n  };\n\n  const handleOpen = (item) => {\n    const newList = list.map((i) => {\n      if (i.id === item.id && !item.open) return { ...i, open: true };\n      return { ...i, open: false };\n    });\n    setList(newList);\n  };\n\n  const handleCheck = (item) => {\n    const newList = list.map((categoria) => {\n      const newData = categoria.data.map((subCategoria) =>\n        subCategoria.id === item.id\n          ? { ...subCategoria, checked: !subCategoria.checked }\n          : subCategoria\n      );\n      return { ...categoria, data: newData };\n    });\n    setList(newList);\n  };\n\n  useEffect(() => {\n    const fetchApiData = async () => {\n      const activitiesList = user.activities.map((i) => i.id);\n      setLoading(true);\n      const response = await Api.get('v1/activities');\n      if (response.status !== 200) {\n        Alert.alert(\n          'Erro',\n          'Houve um erro no servidor, tente novamente mais tarde'\n        );\n      } else {\n        setLoading(false);\n        const activities = response.data.map((activity) => {\n          const nest = activity.nest.map((subActivity) => {\n            return {\n              id: subActivity.id,\n              label: subActivity.name,\n              checked: activitiesList.includes(subActivity.id),\n            };\n          });\n          return {\n            id: activity.id,\n            label: activity.name,\n            open: false,\n            data: nest,\n          };\n        });\n        setList(activities);\n      }\n    };\n    fetchApiData();\n  }, []);\n\n  return (\n    <View style={Styles.wrapper}>\n      <View style={Styles.socialMediaContainer}>\n        {user.type == \"PJ\" && list\n          .filter((i) => i.label !== 'EMPREGO/TRABALHO')\n          .map((item) => (\n            <Dropdown\n              key={item.id}\n              onPress={() => handleOpen(item)}\n              handleOpen={item.open}\n              label={item.label}\n              style={Styles.dropdownContainer}\n            >\n              <CheckboxList handleCheck={handleCheck} items={item.data} />\n            </Dropdown>\n          ))}\n        <View>\n          <Text style={Styles.empregoTitle}>Ofertas de Emprego</Text>\n          <Text style={Styles.empregoSubTitle}>Ofereça vagas de serviço</Text>\n        </View>\n        {list\n          .filter((i) => i.label === 'EMPREGO/TRABALHO')\n          .map((item) => (\n            <Dropdown\n              key={item.id}\n              onPress={() => handleOpen(item)}\n              handleOpen={item.open}\n              label={item.label}\n              style={Styles.dropdownContainer}\n            >\n              <CheckboxList handleCheck={handleCheck} items={item.data} />\n            </Dropdown>\n          ))}\n        <View>\n          <Button\n            onPress={handleCadastro}\n            customStyles={{\n              backgroundColor: '#00C068',\n              marginTop: 15,\n              width: '100%',\n              alignSelf: 'center',\n            }}\n            textColor=\"#FFF\"\n            label=\"SALVAR\"\n          />\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default RamoAtividade;\n"]},"metadata":{},"sourceType":"module"}