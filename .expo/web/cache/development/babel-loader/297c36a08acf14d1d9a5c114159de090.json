{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/rodrigo/indicom/app/contexts/auth.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Api from \"../services/Api\";\nimport Loading from \"../components/Loading\";\nimport Render from \"../components/Render\";\nvar AuthContext = createContext();\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      render = _useState6[0],\n      setRender = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      hasUpdatePassword = _useState8[0],\n      sethasUpdatePassword = _useState8[1];\n\n  var logar = function logar(data) {\n    var response;\n    return _regeneratorRuntime.async(function logar$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Api.post('v1/login', _objectSpread({}, data)));\n\n          case 3:\n            response = _context.sent;\n            setLoading(false);\n\n            if (!(response.status !== 200)) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\", false);\n\n          case 7:\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('@Indicom:token', response.data.token));\n\n          case 9:\n            Api.defaults.headers.Authorization = \"Bearer \" + response.data.token;\n            setUser(response.data);\n            return _context.abrupt(\"return\", true);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var deslogar = function deslogar() {\n    AsyncStorage.clear().then(function () {\n      return setUser(false);\n    });\n  };\n\n  useEffect(function () {\n    var checkUser = function checkUser() {\n      var storageToken, response;\n      return _regeneratorRuntime.async(function checkUser$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@Indicom:token'));\n\n            case 2:\n              storageToken = _context2.sent;\n\n              if (!storageToken) {\n                _context2.next = 9;\n                break;\n              }\n\n              Api.defaults.headers.Authorization = \"Bearer \" + storageToken;\n              _context2.next = 7;\n              return _regeneratorRuntime.awrap(Api.get('v1/auth'));\n\n            case 7:\n              response = _context2.sent;\n\n              if (response.status !== 200) {\n                AsyncStorage.clear().then(function () {\n                  return setUser(false);\n                });\n              } else {\n                setUser(response.data);\n              }\n\n            case 9:\n              setTimeout(function () {\n                return setRender(true);\n              }, 2500);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    if (!user) checkUser();\n  }, []);\n  var appState = {\n    logado: !!user,\n    user: user,\n    setUser: setUser,\n    logar: logar,\n    setRender: setRender,\n    setLoading: setLoading,\n    deslogar: deslogar,\n    hasUpdatePassword: hasUpdatePassword,\n    sethasUpdatePassword: sethasUpdatePassword\n  };\n  if (!render) return React.createElement(Render, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 23\n    }\n  });\n  return React.createElement(React.Fragment, null, React.createElement(AuthContext.Provider, {\n    value: appState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, children), loading && React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }));\n};\nexport default AuthContext;","map":{"version":3,"sources":["/Users/rodrigo/indicom/app/contexts/auth.jsx"],"names":["React","createContext","useState","useEffect","AsyncStorage","Api","Loading","Render","AuthContext","AuthProvider","children","loading","setLoading","user","setUser","render","setRender","hasUpdatePassword","sethasUpdatePassword","logar","data","post","response","status","setItem","token","defaults","headers","Authorization","deslogar","clear","then","checkUser","getItem","storageToken","get","setTimeout","appState","logado"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Api from '../services/Api';\n\nimport Loading from '../components/Loading';\nimport Render from '../components/Render';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState(false);\n  const [render, setRender] = useState(false);\n  const [hasUpdatePassword, sethasUpdatePassword] = useState(false);\n\n  const logar = async (data) => {\n    setLoading(true);\n    const response = await Api.post('v1/login', { ...data });\n    setLoading(false);\n    if (response.status !== 200) return false;\n\n    await AsyncStorage.setItem('@Indicom:token', response.data.token);\n    Api.defaults.headers.Authorization = `Bearer ${response.data.token}`;\n    setUser(response.data);\n    return true;\n  };\n\n  const deslogar = () => {\n    AsyncStorage.clear().then(() => setUser(false));\n  };\n\n  useEffect(() => {\n    const checkUser = async () => {\n      const storageToken = await AsyncStorage.getItem('@Indicom:token');\n      if (storageToken) {\n        Api.defaults.headers.Authorization = `Bearer ${storageToken}`;\n        const response = await Api.get('v1/auth');\n\n        if (response.status !== 200) {\n          AsyncStorage.clear().then(() => setUser(false));\n        } else {\n          setUser(response.data);\n        }\n      }\n      setTimeout(() => setRender(true), 2500);\n    };\n    if (!user) checkUser();\n  }, []);\n\n  const appState = {\n    logado: !!user,\n    user,\n    setUser,\n    logar,\n    setRender,\n    setLoading,\n    deslogar,\n    hasUpdatePassword,\n    sethasUpdatePassword\n  };\n\n  if (!render) return <Render />;\n\n  return (\n    <>\n      <AuthContext.Provider value={appState}>{children}</AuthContext.Provider>\n      {loading && <Loading />}\n    </>\n  );\n};\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}