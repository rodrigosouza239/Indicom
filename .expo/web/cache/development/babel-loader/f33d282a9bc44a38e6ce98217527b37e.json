{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/rodrigo/indicom/app/components/template/Footer.jsx\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useNavigation } from '@react-navigation/native';\nimport Api from \"../../services/Api\";\nimport FooterItem from \"./FooterItem\";\nimport AuthContext from \"../../contexts/auth\";\nimport ApplicationContext from \"../../contexts/application\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar styles = StyleSheet.create({\n  footer: {\n    height: 70,\n    width: '100%',\n    backgroundColor: '#FFD500',\n    zIndex: 999\n  },\n  footerBody: {\n    marginTop: 10,\n    height: '100%',\n    flexDirection: 'row'\n  }\n});\n\nvar Footer = function Footer(_ref) {\n  var active = _ref.active;\n  var navigation = useNavigation();\n\n  var _React$useContext = React.useContext(ApplicationContext),\n      countBadgesOfertas = _React$useContext.countBadgesOfertas,\n      setcountBadgesOfertas = _React$useContext.setcountBadgesOfertas,\n      ultimasofertasvisualizadas = _React$useContext.ultimasofertasvisualizadas;\n\n  var _React$useContext2 = React.useContext(AuthContext),\n      user = _React$useContext2.user;\n\n  React.useEffect(function () {\n    var fetchApiData = function fetchApiData() {\n      var interests, response;\n      return _regeneratorRuntime.async(function fetchApiData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              interests = user.interests.map(function (interest) {\n                return interest.id;\n              });\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Api.post('v1/jobs', {\n                interests: interests\n              }));\n\n            case 3:\n              response = _context.sent;\n\n              if (response.status !== 200) {} else {\n                response.data && AsyncStorage.getItem('@ultimasofertasvisualizadas_storage_Key').then(function (payload) {\n                  setcountBadgesOfertas((ultimasofertasvisualizadas || parseInt(payload)) == response.data.length ? 0 : response.data.length);\n                }).catch(function (e) {\n                  return console.log(e);\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchApiData();\n  }, []);\n  return React.createElement(View, {\n    style: styles.footer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.footerBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, React.createElement(FooterItem, {\n    active: active,\n    label: \"Meu Perfil\",\n    onPress: function onPress() {\n      return navigation.navigate('MeuPerfil');\n    },\n    icon: \"user-alt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), React.createElement(FooterItem, {\n    active: active,\n    label: \"Amigos\",\n    onPress: function onPress() {\n      return navigation.navigate('Amigos');\n    },\n    icon: \"user-friends\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), React.createElement(FooterItem, {\n    active: active,\n    label: \"Interesses\",\n    onPress: function onPress() {\n      return navigation.navigate('MeusInteresses');\n    },\n    icon: \"heart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), React.createElement(FooterItem, {\n    active: active,\n    countBadge: countBadgesOfertas,\n    label: \"Ofertas\",\n    icon: \"comment-alt\",\n    onPress: function onPress() {\n      return navigation.navigate('OfertasRecebidas');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), React.createElement(FooterItem, {\n    active: active,\n    label: \"Home\",\n    icon: \"home\",\n    onPress: function onPress() {\n      return navigation.navigate('Home');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Footer;","map":{"version":3,"sources":["/Users/rodrigo/indicom/app/components/template/Footer.jsx"],"names":["React","useNavigation","Api","FooterItem","AuthContext","ApplicationContext","AsyncStorage","styles","StyleSheet","create","footer","height","width","backgroundColor","zIndex","footerBody","marginTop","flexDirection","Footer","active","navigation","useContext","countBadgesOfertas","setcountBadgesOfertas","ultimasofertasvisualizadas","user","useEffect","fetchApiData","interests","map","interest","id","post","response","status","data","getItem","then","payload","parseInt","length","catch","e","console","log","navigate"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport Api from '../../services/Api';\nimport FooterItem from './FooterItem';\nimport AuthContext from \"../../contexts/auth\";\nimport ApplicationContext from \"../../contexts/application\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst styles = StyleSheet.create({\n  footer: {\n    height: 70,\n    width: '100%',\n    backgroundColor: '#FFD500',\n    zIndex: 999,\n  },\n  footerBody: {\n    marginTop: 10,\n    height: '100%',\n    flexDirection: 'row',\n  },\n});\n\nconst Footer = ({ active }) => {\n  const navigation = useNavigation();\n  const {countBadgesOfertas, setcountBadgesOfertas, ultimasofertasvisualizadas} = React.useContext(ApplicationContext);\n  const { user } = React.useContext(AuthContext);\n  React.useEffect(()=>{\n    const fetchApiData = async () => {\n      const interests = user.interests.map((interest) => {\n        return interest.id;\n      });\n      const response = await Api.post('v1/jobs', { interests });\n      if (response.status !== 200) {\n      } else {\n        response.data && AsyncStorage.getItem('@ultimasofertasvisualizadas_storage_Key')\n        .then(payload => {\n          setcountBadgesOfertas((ultimasofertasvisualizadas || parseInt(payload)) == response.data.length ? 0 : response.data.length)\n        })\n        .catch(e => console.log(e))\n      }\n    };\n    fetchApiData();\n  },[])\n\n  return (\n    <View style={styles.footer}>\n      <View style={styles.footerBody}>\n        <FooterItem\n          active={active}\n          label=\"Meu Perfil\"\n          onPress={() => navigation.navigate('MeuPerfil')}\n          icon=\"user-alt\"\n        />\n        <FooterItem\n          active={active}\n          label=\"Amigos\"\n          onPress={() => navigation.navigate('Amigos')}\n          icon=\"user-friends\"\n        />\n        <FooterItem\n          active={active}\n          label=\"Interesses\"\n          onPress={() => navigation.navigate('MeusInteresses')}\n          icon=\"heart\"\n        />\n        <FooterItem\n          active={active}\n          countBadge={countBadgesOfertas}\n          label=\"Ofertas\"\n          icon=\"comment-alt\"\n          onPress={() => navigation.navigate('OfertasRecebidas')}\n        />\n        <FooterItem\n          active={active}\n          label=\"Home\"\n          icon=\"home\"\n          onPress={() => navigation.navigate('Home')}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default Footer;\n"]},"metadata":{},"sourceType":"module"}