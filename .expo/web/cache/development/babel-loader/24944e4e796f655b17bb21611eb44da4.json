{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/bayons/indicom-app-master/app/pages/Login/RamoAtividade/RamoAtividade.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ApplicationContext from \"../../../contexts/application\";\nimport Styles from \"./Styles\";\nimport * as Utils from \"./Utils\";\nimport Api from \"../../../services/Api\";\nimport Button from \"../../../components/Button\";\nimport Dropdown from \"../../../components/Dropdown\";\nimport CheckboxList from \"./CheckboxList\";\nimport UserIcon from \"../../../../assets/img/user-icon.png\";\n\nvar RamoAtividade = function RamoAtividade(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      list = _useState2[0],\n      setList = _useState2[1];\n\n  var _useContext = useContext(ApplicationContext),\n      newUser = _useContext.newUser,\n      setNewUser = _useContext.setNewUser,\n      setLoading = _useContext.setLoading;\n\n  var handleCadastro = function handleCadastro() {\n    var ramoAtividades, user, response;\n    return _regeneratorRuntime.async(function handleCadastro$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ramoAtividades = [];\n            list.map(function (categoria) {\n              return categoria.data.map(function (subCategoria) {\n                return subCategoria.checked && ramoAtividades.push(subCategoria.id);\n              });\n            });\n\n            if (!(ramoAtividades.length === 0)) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Alert.alert('Erro', 'É obrigatório escolher pelo menos 1 ramo de atividade'));\n\n          case 4:\n            setLoading(true);\n            user = _objectSpread(_objectSpread({}, newUser), {}, {\n              ramoAtividades: ramoAtividades\n            });\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(Utils.cadastrar(user));\n\n          case 8:\n            response = _context.sent;\n            setLoading(false);\n\n            if (response) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Alert.alert('Erro', 'Houve um erro no servidor, tente novamente mais tarde'));\n\n          case 12:\n            setNewUser(user);\n            return _context.abrupt(\"return\", navigation.navigate('CadastroConcluido'));\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleOpen = function handleOpen(item) {\n    var newList = list.map(function (i) {\n      if (i.id === item.id && !item.open) return _objectSpread(_objectSpread({}, i), {}, {\n        open: true\n      });\n      return _objectSpread(_objectSpread({}, i), {}, {\n        open: false\n      });\n    });\n    setList(newList);\n  };\n\n  var handleCheck = function handleCheck(item) {\n    var newList = list.map(function (categoria) {\n      var newData = categoria.data.map(function (subCategoria) {\n        return subCategoria.id === item.id ? _objectSpread(_objectSpread({}, subCategoria), {}, {\n          checked: !subCategoria.checked\n        }) : subCategoria;\n      });\n      return _objectSpread(_objectSpread({}, categoria), {}, {\n        data: newData\n      });\n    });\n    setList(newList);\n  };\n\n  useEffect(function () {\n    var fetchApiData = function fetchApiData() {\n      var response, activities;\n      return _regeneratorRuntime.async(function fetchApiData$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setLoading(true);\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(Api.get('v1/activities'));\n\n            case 3:\n              response = _context2.sent;\n\n              if (response.status !== 200) {\n                Alert.alert('Erro', 'Houve um erro no servidor, tente novamente mais tarde');\n              } else {\n                setLoading(false);\n                activities = response.data.map(function (activity) {\n                  var nest = activity.nest.map(function (subActivity) {\n                    return {\n                      id: subActivity.id,\n                      label: subActivity.name,\n                      checked: false\n                    };\n                  });\n                  return {\n                    id: activity.id,\n                    label: activity.name,\n                    open: false,\n                    data: nest\n                  };\n                });\n                setList(activities);\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchApiData();\n  }, []);\n  return React.createElement(View, {\n    style: Styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: Styles.container,\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: UserIcon,\n    style: Styles.iconImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: Styles.bemVindoText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, \"Bem vindo \", newUser.name, \"!\"), React.createElement(Text, {\n    style: Styles.subTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Meu Ramo de Atividade\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, \"Para suas futuras ofertas\"), React.createElement(View, {\n    style: Styles.socialMediaContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, list.filter(function (i) {\n    return i.label !== 'EMPREGO/TRABALHO';\n  }).map(function (item) {\n    return React.createElement(Dropdown, {\n      key: item.id,\n      onPress: function onPress() {\n        return handleOpen(item);\n      },\n      handleOpen: item.open,\n      label: item.label,\n      style: Styles.dropdownContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, React.createElement(CheckboxList, {\n      handleCheck: handleCheck,\n      items: item.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }));\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: Styles.empregoTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"Ofertas de Emprego\"), React.createElement(Text, {\n    style: Styles.empregoSubTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"Ofere\\xE7a vagas de servi\\xE7o\")), list.filter(function (i) {\n    return i.label === 'EMPREGO/TRABALHO';\n  }).map(function (item) {\n    return React.createElement(Dropdown, {\n      key: item.id,\n      onPress: function onPress() {\n        return handleOpen(item);\n      },\n      handleOpen: item.open,\n      label: item.label,\n      style: Styles.dropdownContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }, React.createElement(CheckboxList, {\n      handleCheck: handleCheck,\n      items: item.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }));\n  }), React.createElement(Button, {\n    onPress: handleCadastro,\n    customStyles: {\n      backgroundColor: '#00C068',\n      marginTop: 15,\n      width: '60%',\n      alignSelf: 'center'\n    },\n    textColor: \"#FFF\",\n    label: \"SALVAR\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default RamoAtividade;","map":{"version":3,"sources":["/home/bayons/indicom-app-master/app/pages/Login/RamoAtividade/RamoAtividade.jsx"],"names":["React","useContext","useState","useEffect","ApplicationContext","Styles","Utils","Api","Button","Dropdown","CheckboxList","UserIcon","RamoAtividade","navigation","list","setList","newUser","setNewUser","setLoading","handleCadastro","ramoAtividades","map","categoria","data","subCategoria","checked","push","id","length","Alert","alert","user","cadastrar","response","navigate","handleOpen","item","newList","i","open","handleCheck","newData","fetchApiData","get","status","activities","activity","nest","subActivity","label","name","wrapper","container","width","iconImg","bemVindoText","subTitle","socialMediaContainer","filter","dropdownContainer","empregoTitle","empregoSubTitle","backgroundColor","marginTop","alignSelf"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { View, Text, Image, ScrollView, Alert } from 'react-native';\nimport ApplicationContext from '../../../contexts/application';\nimport Styles from './Styles';\nimport * as Utils from './Utils';\nimport Api from '../../../services/Api';\n\nimport Button from '../../../components/Button';\nimport Dropdown from '../../../components/Dropdown';\nimport CheckboxList from './CheckboxList';\n\nimport UserIcon from '../../../../assets/img/user-icon.png';\n\nconst RamoAtividade = ({ navigation }) => {\n  const [list, setList] = useState([]);\n  const { newUser, setNewUser, setLoading } = useContext(ApplicationContext);\n\n  const handleCadastro = async () => {\n    const ramoAtividades = [];\n    list.map((categoria) =>\n      categoria.data.map(\n        (subCategoria) =>\n          subCategoria.checked && ramoAtividades.push(subCategoria.id)\n      )\n    );\n    if (ramoAtividades.length === 0) {\n      return Alert.alert(\n        'Erro',\n        'É obrigatório escolher pelo menos 1 ramo de atividade'\n      );\n    }\n    setLoading(true);\n    const user = { ...newUser, ramoAtividades };\n    const response = await Utils.cadastrar(user);\n    setLoading(false);\n    if (!response)\n      return Alert.alert(\n        'Erro',\n        'Houve um erro no servidor, tente novamente mais tarde'\n      );\n\n    setNewUser(user);\n    return navigation.navigate('CadastroConcluido');\n  };\n\n  const handleOpen = (item) => {\n    const newList = list.map((i) => {\n      if (i.id === item.id && !item.open) return { ...i, open: true };\n      return { ...i, open: false };\n    });\n    setList(newList);\n  };\n\n  const handleCheck = (item) => {\n    const newList = list.map((categoria) => {\n      const newData = categoria.data.map((subCategoria) =>\n        subCategoria.id === item.id\n          ? { ...subCategoria, checked: !subCategoria.checked }\n          : subCategoria\n      );\n      return { ...categoria, data: newData };\n    });\n    setList(newList);\n  };\n\n  useEffect(() => {\n    const fetchApiData = async () => {\n      setLoading(true);\n      const response = await Api.get('v1/activities');\n      if (response.status !== 200) {\n        Alert.alert(\n          'Erro',\n          'Houve um erro no servidor, tente novamente mais tarde'\n        );\n      } else {\n        setLoading(false);\n        const activities = response.data.map((activity) => {\n          const nest = activity.nest.map((subActivity) => {\n            return {\n              id: subActivity.id,\n              label: subActivity.name,\n              checked: false,\n            };\n          });\n          return {\n            id: activity.id,\n            label: activity.name,\n            open: false,\n            data: nest,\n          };\n        });\n        setList(activities);\n      }\n    };\n    fetchApiData();\n  }, []);\n\n  return (\n    <View style={Styles.wrapper}>\n      <ScrollView\n        contentContainerStyle={Styles.container}\n        style={{ width: '100%' }}\n      >\n        <Image source={UserIcon} style={Styles.iconImg} />\n        <Text style={Styles.bemVindoText}>Bem vindo {newUser.name}!</Text>\n        <Text style={Styles.subTitle}>Meu Ramo de Atividade</Text>\n        <Text>Para suas futuras ofertas</Text>\n        <View style={Styles.socialMediaContainer}>\n          {list\n            .filter((i) => i.label !== 'EMPREGO/TRABALHO')\n            .map((item) => (\n              <Dropdown\n                key={item.id}\n                onPress={() => handleOpen(item)}\n                handleOpen={item.open}\n                label={item.label}\n                style={Styles.dropdownContainer}\n              >\n                <CheckboxList handleCheck={handleCheck} items={item.data} />\n              </Dropdown>\n            ))}\n          <View>\n            <Text style={Styles.empregoTitle}>Ofertas de Emprego</Text>\n            <Text style={Styles.empregoSubTitle}>Ofereça vagas de serviço</Text>\n          </View>\n          {list\n            .filter((i) => i.label === 'EMPREGO/TRABALHO')\n            .map((item) => (\n              <Dropdown\n                key={item.id}\n                onPress={() => handleOpen(item)}\n                handleOpen={item.open}\n                label={item.label}\n                style={Styles.dropdownContainer}\n              >\n                <CheckboxList handleCheck={handleCheck} items={item.data} />\n              </Dropdown>\n            ))}\n          <Button\n            onPress={handleCadastro}\n            customStyles={{\n              backgroundColor: '#00C068',\n              marginTop: 15,\n              width: '60%',\n              alignSelf: 'center',\n            }}\n            textColor=\"#FFF\"\n            label=\"SALVAR\"\n          />\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default RamoAtividade;\n"]},"metadata":{},"sourceType":"module"}