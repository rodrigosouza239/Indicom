{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/rodrigo/indicom/app/pages/Login/Cadastrar.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport ApplicationContext from \"../../contexts/application\";\nimport Styles from \"./styles\";\nimport * as Utils from \"./utils\";\nimport Button from \"../../components/Button\";\nimport Input from \"../../components/Input\";\nimport Logo from \"../../../assets/img/logo.png\";\nvar styles = StyleSheet.create(Styles);\n\nvar Cadastrar = function Cadastrar(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(ApplicationContext),\n      setLoading = _useContext.setLoading,\n      newUser = _useContext.newUser,\n      setNewUser = _useContext.setNewUser;\n\n  var handleCadastro = function handleCadastro(data) {\n    var checkPassword, responseEmail;\n    return _regeneratorRuntime.async(function handleCadastro$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(data.password !== data.passwordCheck)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Alert.alert('Atenção', 'As senhas não conferem'));\n\n          case 2:\n            checkPassword = Utils.checkPassword(data.password);\n\n            if (checkPassword) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Alert.alert('Atenção', 'Senha deve ter no mínimo 6 caracteres com pelo menos uma letra e um número'));\n\n          case 5:\n            setLoading(true);\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(Utils.checkEmail(data.email));\n\n          case 8:\n            responseEmail = _context.sent;\n            setLoading(false);\n\n            if (responseEmail) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Alert.alert('Atenção', 'E-mail já cadastrado.'));\n\n          case 12:\n            setNewUser(_objectSpread(_objectSpread({}, newUser), data));\n            return _context.abrupt(\"return\", navigation.navigate('CompleteCadastro'));\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: styles.container,\n    style: {\n      width: '100%',\n      marginTop: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, React.createElement(KeyboardAwareScrollView, {\n    resetScrollToCoords: {\n      x: 0,\n      y: 0\n    },\n    style: {\n      backgroundColor: '#000'\n    },\n    scrollEnabled: true,\n    keyboardOpeningTime: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    source: Logo,\n    style: styles.imageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"A melhor plataforma comercial de indica\\xE7\\xE3o online!\"), React.createElement(Text, {\n    style: styles.subTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Nova Conta\"), React.createElement(Formik, {\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n      passwordCheck: ''\n    },\n    onSubmit: function onSubmit(data) {\n      return handleCadastro(data);\n    },\n    validationSchema: yup.object().shape({\n      name: yup.string().required(),\n      email: yup.string().email().required(),\n      password: yup.string().required(),\n      passwordCheck: yup.string().required()\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, function (_ref2) {\n    var handleChange = _ref2.handleChange,\n        handleBlur = _ref2.handleBlur,\n        handleSubmit = _ref2.handleSubmit,\n        values = _ref2.values,\n        errors = _ref2.errors,\n        isValid = _ref2.isValid;\n    return React.createElement(View, {\n      style: styles.socialMediaContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, React.createElement(Input, {\n      onChangeText: handleChange('name'),\n      onBlur: handleBlur('name'),\n      placeholder: \"Qual seu nome?\",\n      textContentType: \"name\",\n      customStyle: {\n        marginBottom: 13\n      },\n      error: errors.name,\n      value: values.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    }), React.createElement(Input, {\n      onChangeText: handleChange('email'),\n      onBlur: handleBlur('email'),\n      placeholder: \"Insira um endere\\xE7o de e-mail:\",\n      keyboardType: \"email-address\",\n      textContentType: \"emailAddress\",\n      customStyle: {\n        marginBottom: 13\n      },\n      error: errors.email,\n      value: values.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    }), React.createElement(Input, {\n      onChangeText: handleChange('password'),\n      onBlur: handleBlur('password'),\n      placeholder: \"Insira uma senha para sua conta:\",\n      textContentType: \"password\",\n      secureTextEntry: true,\n      customStyle: {\n        marginBottom: 13\n      },\n      error: errors.password,\n      value: values.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    }), React.createElement(Input, {\n      onChangeText: handleChange('passwordCheck'),\n      onBlur: handleBlur('passwordCheck'),\n      placeholder: \"Confirme sua senha:\",\n      textContentType: \"password\",\n      secureTextEntry: true,\n      customStyle: {\n        marginBottom: 13\n      },\n      error: errors.passwordCheck,\n      value: values.passwordCheck,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }), React.createElement(Button, {\n      onPress: handleSubmit,\n      disabled: !isValid,\n      customStyles: {\n        backgroundColor: '#FFD500',\n        marginBottom: 13\n      },\n      textColor: \"#000\",\n      label: \"Cadastrar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    }));\n  })))));\n};\n\nexport default Cadastrar;","map":{"version":3,"sources":["/Users/rodrigo/indicom/app/pages/Login/Cadastrar.jsx"],"names":["React","useContext","KeyboardAwareScrollView","Formik","yup","ApplicationContext","Styles","Utils","Button","Input","Logo","styles","StyleSheet","create","Cadastrar","navigation","setLoading","newUser","setNewUser","handleCadastro","data","password","passwordCheck","Alert","alert","checkPassword","checkEmail","email","responseEmail","navigate","wrapper","container","width","marginTop","x","y","backgroundColor","imageContainer","subTitle","name","object","shape","string","required","handleChange","handleBlur","handleSubmit","values","errors","isValid","socialMediaContainer","marginBottom"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { StyleSheet, View, Text, Image, ScrollView, Alert } from 'react-native';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport ApplicationContext from '../../contexts/application';\nimport Styles from './styles';\nimport * as Utils from './utils';\n\nimport Button from '../../components/Button';\nimport Input from '../../components/Input';\n\nimport Logo from '../../../assets/img/logo.png';\n\nconst styles = StyleSheet.create(Styles);\n\nconst Cadastrar = ({ navigation }) => {\n  const { setLoading, newUser, setNewUser } = useContext(ApplicationContext);\n\n  const handleCadastro = async (data) => {\n    if (data.password !== data.passwordCheck)\n      return Alert.alert('Atenção', 'As senhas não conferem');\n    const checkPassword = Utils.checkPassword(data.password);\n    if (!checkPassword)\n      return Alert.alert(\n        'Atenção',\n        'Senha deve ter no mínimo 6 caracteres com pelo menos uma letra e um número'\n      );\n    setLoading(true);\n    const responseEmail = await Utils.checkEmail(data.email);\n    setLoading(false);\n\n    if (!responseEmail) return Alert.alert('Atenção', 'E-mail já cadastrado.');\n    setNewUser({ ...newUser, ...data });\n    return navigation.navigate('CompleteCadastro');\n  };\n\n  return (\n    <View style={styles.wrapper}>\n      <ScrollView\n        contentContainerStyle={styles.container}\n        style={{ width: '100%', marginTop: 30 }}\n      >\n        <KeyboardAwareScrollView\n          resetScrollToCoords={{ x: 0, y: 0 }}\n          style={{ backgroundColor: '#000' }}\n          scrollEnabled\n          keyboardOpeningTime={0}\n        >\n          <View style={styles.wrapper}>\n            <Image source={Logo} style={styles.imageContainer} />\n            <Text>A melhor plataforma comercial de indicação online!</Text>\n            <Text style={styles.subTitle}>Nova Conta</Text>\n            <Formik\n              initialValues={{\n                name: '',\n                email: '',\n                password: '',\n                passwordCheck: '',\n              }}\n              onSubmit={(data) => handleCadastro(data)}\n              validationSchema={yup.object().shape({\n                name: yup.string().required(),\n                email: yup.string().email().required(),\n                password: yup.string().required(),\n                passwordCheck: yup.string().required(),\n              })}\n            >\n              {({\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                values,\n                errors,\n                isValid,\n              }) => (\n                <View style={styles.socialMediaContainer}>\n                  <Input\n                    onChangeText={handleChange('name')}\n                    onBlur={handleBlur('name')}\n                    placeholder=\"Qual seu nome?\"\n                    textContentType=\"name\"\n                    customStyle={{ marginBottom: 13 }}\n                    error={errors.name}\n                    value={values.name}\n                  />\n                  <Input\n                    onChangeText={handleChange('email')}\n                    onBlur={handleBlur('email')}\n                    placeholder=\"Insira um endereço de e-mail:\"\n                    keyboardType=\"email-address\"\n                    textContentType=\"emailAddress\"\n                    customStyle={{ marginBottom: 13 }}\n                    error={errors.email}\n                    value={values.email}\n                  />\n                  <Input\n                    onChangeText={handleChange('password')}\n                    onBlur={handleBlur('password')}\n                    placeholder=\"Insira uma senha para sua conta:\"\n                    textContentType=\"password\"\n                    secureTextEntry\n                    customStyle={{ marginBottom: 13 }}\n                    error={errors.password}\n                    value={values.password}\n                  />\n                  <Input\n                    onChangeText={handleChange('passwordCheck')}\n                    onBlur={handleBlur('passwordCheck')}\n                    placeholder=\"Confirme sua senha:\"\n                    textContentType=\"password\"\n                    secureTextEntry\n                    customStyle={{ marginBottom: 13 }}\n                    error={errors.passwordCheck}\n                    value={values.passwordCheck}\n                  />\n                  <Button\n                    onPress={handleSubmit}\n                    disabled={!isValid}\n                    customStyles={{\n                      backgroundColor: '#FFD500',\n                      marginBottom: 13,\n                    }}\n                    textColor=\"#000\"\n                    label=\"Cadastrar\"\n                  />\n                </View>\n              )}\n            </Formik>\n          </View>\n        </KeyboardAwareScrollView>\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default Cadastrar;\n"]},"metadata":{},"sourceType":"module"}