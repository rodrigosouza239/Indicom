{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/home/bayons/indicom-app-master/app/pages/Login/CadastroConcluido/CadastroConcluido.jsx\";\nimport React, { useContext, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ApplicationContext from \"../../../contexts/application\";\nimport AuthContext from \"../../../contexts/auth\";\nimport Styles from \"./Styles\";\nimport Button from \"../../../components/Button\";\nimport UserIcon from \"../../../../assets/img/user-icon.png\";\n\nvar CadastroConcluido = function CadastroConcluido(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(ApplicationContext),\n      newUser = _useContext.newUser,\n      setCreatedUser = _useContext.setCreatedUser;\n\n  var _useContext2 = useContext(AuthContext),\n      logar = _useContext2.logar;\n\n  useEffect(function () {\n    setCreatedUser(true);\n  }, []);\n\n  var handleLogin = function handleLogin() {\n    var email, password, response;\n    return _regeneratorRuntime.async(function handleLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            email = newUser.email, password = newUser.password;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(logar({\n              email: email,\n              password: password\n            }));\n\n          case 3:\n            response = _context.sent;\n\n            if (response) {\n              _context.next = 7;\n              break;\n            }\n\n            Alert.alert('Erro', 'Erro de cadastro, favor contatar o administrador.');\n            return _context.abrupt(\"return\", navigation.navigate('Login'));\n\n          case 7:\n            return _context.abrupt(\"return\", navigation.navigate('MeusInteresses'));\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: Styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    source: UserIcon,\n    style: Styles.iconImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: Styles.bemVindoText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Bem vindo \", newUser.name, \"!\"), React.createElement(Text, {\n    style: Styles.subTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Cadastro Conclu\\xEDdo\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Pronto para a pr\\xF3xima etapa?\"), React.createElement(View, {\n    style: Styles.socialMediaContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    onPress: function onPress() {\n      return handleLogin();\n    },\n    customStyles: {\n      backgroundColor: '#FFD500',\n      marginTop: 15,\n      width: '90%',\n      alignSelf: 'center'\n    },\n    textColor: \"#000\",\n    label: \"Ir para Meus Interesses\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default CadastroConcluido;","map":{"version":3,"sources":["/home/bayons/indicom-app-master/app/pages/Login/CadastroConcluido/CadastroConcluido.jsx"],"names":["React","useContext","useEffect","ApplicationContext","AuthContext","Styles","Button","UserIcon","CadastroConcluido","navigation","newUser","setCreatedUser","logar","handleLogin","email","password","response","Alert","alert","navigate","wrapper","iconImg","bemVindoText","name","subTitle","socialMediaContainer","backgroundColor","marginTop","width","alignSelf"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;;;;;AAEA,OAAOC,kBAAP;AACA,OAAOC,WAAP;AACA,OAAOC,MAAP;AAEA,OAAOC,MAAP;AAEA,OAAOC,QAAP;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,oBACRR,UAAU,CAACE,kBAAD,CADF;AAAA,MACpCO,OADoC,eACpCA,OADoC;AAAA,MAC3BC,cAD2B,eAC3BA,cAD2B;;AAAA,qBAE1BV,UAAU,CAACG,WAAD,CAFgB;AAAA,MAEpCQ,KAFoC,gBAEpCA,KAFoC;;AAI5CV,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAME,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,YAAAA,KADU,GACUJ,OADV,CACVI,KADU,EACHC,QADG,GACUL,OADV,CACHK,QADG;AAAA;AAAA,6CAEKH,KAAK,CAAC;AAAEE,cAAAA,KAAK,EAALA,KAAF;AAASC,cAAAA,QAAQ,EAARA;AAAT,aAAD,CAFV;;AAAA;AAEZC,YAAAA,QAFY;;AAAA,gBAGbA,QAHa;AAAA;AAAA;AAAA;;AAIhBC,YAAAA,KAAK,CAACC,KAAN,CAAY,MAAZ,EAAoB,mDAApB;AAJgB,6CAKTT,UAAU,CAACU,QAAX,CAAoB,OAApB,CALS;;AAAA;AAAA,6CAOXV,UAAU,CAACU,QAAX,CAAoB,gBAApB,CAPW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAUA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEd,MAAM,CAACe,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEb,QAAf;AAAyB,IAAA,KAAK,EAAEF,MAAM,CAACgB,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,MAAM,CAACiB,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA6CZ,OAAO,CAACa,IAArD,MAFF,EAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElB,MAAM,CAACmB,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHF,EAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAJF,EAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnB,MAAM,CAACoB,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMZ,WAAW,EAAjB;AAAA,KADX;AAEE,IAAA,YAAY,EAAE;AACZa,MAAAA,eAAe,EAAE,SADL;AAEZC,MAAAA,SAAS,EAAE,EAFC;AAGZC,MAAAA,KAAK,EAAE,KAHK;AAIZC,MAAAA,SAAS,EAAE;AAJC,KAFhB;AAQE,IAAA,SAAS,EAAC,MARZ;AASE,IAAA,KAAK,EAAC,yBATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADF;AAqBD,CAvCD;;AAyCA,eAAerB,iBAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { View, Text, Image, Alert } from 'react-native';\nimport ApplicationContext from '../../../contexts/application';\nimport AuthContext from '../../../contexts/auth';\nimport Styles from './Styles';\n\nimport Button from '../../../components/Button';\n\nimport UserIcon from '../../../../assets/img/user-icon.png';\n\nconst CadastroConcluido = ({ navigation }) => {\n  const { newUser, setCreatedUser } = useContext(ApplicationContext);\n  const { logar } = useContext(AuthContext);\n\n  useEffect(() => {\n    setCreatedUser(true);\n  }, []);\n\n  const handleLogin = async () => {\n    const { email, password } = newUser;\n    const response = await logar({ email, password });\n    if (!response) {\n      Alert.alert('Erro', 'Erro de cadastro, favor contatar o administrador.');\n      return navigation.navigate('Login');\n    }\n    return navigation.navigate('MeusInteresses');\n  };\n\n  return (\n    <View style={Styles.wrapper}>\n      <Image source={UserIcon} style={Styles.iconImg} />\n      <Text style={Styles.bemVindoText}>Bem vindo {newUser.name}!</Text>\n      <Text style={Styles.subTitle}>Cadastro Concluído</Text>\n      <Text>Pronto para a próxima etapa?</Text>\n      <View style={Styles.socialMediaContainer}>\n        <Button\n          onPress={() => handleLogin()}\n          customStyles={{\n            backgroundColor: '#FFD500',\n            marginTop: 15,\n            width: '90%',\n            alignSelf: 'center',\n          }}\n          textColor=\"#000\"\n          label=\"Ir para Meus Interesses\"\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default CadastroConcluido;\n"]},"metadata":{},"sourceType":"module"}