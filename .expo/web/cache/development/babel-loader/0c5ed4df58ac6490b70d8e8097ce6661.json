{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _jsxFileName = \"/Users/rodrigo/indicom/node_modules/react-native-rating-element/src/Rating/index.js\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  overflow: hidden;\\n  position: absolute;\\n  flex-direction: \", \";\\n  width: \", \";\\n  height: \", \";\\n\\n  top: \", \";\\n  bottom: \", \";\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  position: relative;\\n  flex-direction: \", \";\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  flex-direction: \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport IconBar from \"./components/IconBar\";\nimport styled from \"styled-components/native\";\nvar StyledView = styled.View(_templateObject(), function (_ref) {\n  var dir = _ref.dir;\n  return \"\" + dir;\n});\nvar BackgroundIcons = styled.View(_templateObject2(), function (_ref2) {\n  var dir = _ref2.dir;\n  return \"\" + dir;\n});\nvar ColoredIcons = styled.View(_templateObject3(), function (_ref3) {\n  var dir = _ref3.dir;\n  return \"\" + dir;\n}, function (_ref4) {\n  var percentage = _ref4.percentage,\n      dir = _ref4.dir;\n  return dir === \"column\" || dir === \"column-reverse\" ? \"100%\" : percentage + \"%\";\n}, function (_ref5) {\n  var percentage = _ref5.percentage,\n      dir = _ref5.dir;\n  return dir === \"row\" || dir === \"row-reverse\" ? \"100%\" : percentage + \"%\";\n}, function (_ref6) {\n  var dir = _ref6.dir;\n  return dir === \"column\" ? 0 : \"auto\";\n}, function (_ref7) {\n  var dir = _ref7.dir;\n  return dir === \"column-reverse\" ? 0 : \"auto\";\n});\n\nvar Rating = function Rating(_ref8) {\n  var rated = _ref8.rated,\n      totalCount = _ref8.totalCount,\n      ratingColor = _ref8.ratingColor,\n      ratingBackgroundColor = _ref8.ratingBackgroundColor,\n      size = _ref8.size,\n      icon = _ref8.icon,\n      marginBetweenRatingIcon = _ref8.marginBetweenRatingIcon,\n      readonly = _ref8.readonly,\n      onIconTap = _ref8.onIconTap,\n      direction = _ref8.direction,\n      type = _ref8.type,\n      selectedIconImage = _ref8.selectedIconImage,\n      emptyIconImage = _ref8.emptyIconImage;\n  var percentage = rated / totalCount * 100;\n  return React.createElement(StyledView, {\n    dir: direction,\n    accessible: !readonly,\n    importantForAccessibility: !readonly ? \"yes\" : \"no\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(BackgroundIcons, {\n    dir: direction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, Array.from({\n    length: totalCount\n  }, function (_, i) {\n    return React.createElement(IconBar, {\n      isAccessible: true,\n      name: icon,\n      key: \"bgstar_\" + i,\n      size: size,\n      position: i,\n      color: ratingBackgroundColor,\n      margin: marginBetweenRatingIcon,\n      onIconTap: onIconTap,\n      readonly: readonly,\n      type: type,\n      selectedIconImage: selectedIconImage,\n      emptyIconImage: emptyIconImage,\n      totalCount: totalCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    });\n  }), React.createElement(ColoredIcons, {\n    percentage: percentage,\n    dir: direction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, Array.from({\n    length: totalCount\n  }, function (_, i) {\n    return React.createElement(IconBar, {\n      filled: true,\n      name: icon,\n      key: \"cstar_\" + i,\n      size: size,\n      position: i,\n      color: ratingColor,\n      margin: marginBetweenRatingIcon,\n      onIconTap: onIconTap,\n      readonly: readonly,\n      type: type,\n      selectedIconImage: selectedIconImage,\n      emptyIconImage: emptyIconImage,\n      totalCount: totalCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    });\n  }))));\n};\n\nRating.defaultProps = {\n  rated: 0,\n  totalCount: 5,\n  ratingColor: \"#f1c644\",\n  ratingBackgroundColor: \"#d4d4d4\",\n  size: 12,\n  icon: \"ios-star\",\n  marginBetweenRatingIcon: 1,\n  readonly: false,\n  direction: \"row\",\n  type: \"icon\"\n};\nRating.propTypes = {\n  rated: PropTypes.number,\n  totalCount: PropTypes.number,\n  ratingColor: PropTypes.string,\n  ratingBackgroundColor: PropTypes.string,\n  size: PropTypes.number,\n  icon: PropTypes.string,\n  marginBetweenRatingIcon: PropTypes.number,\n  readonly: PropTypes.bool,\n  onIconTap: PropTypes.func,\n  direction: PropTypes.oneOf([\"row\", \"row-reverse\", \"column\", \"column-reverse\"]),\n  type: PropTypes.oneOf([\"icon\", \"custom\"]),\n  selectedIconImage: PropTypes.node,\n  emptyIconImage: PropTypes.node\n};\nexport default Rating;","map":{"version":3,"sources":["/Users/rodrigo/indicom/node_modules/react-native-rating-element/src/Rating/index.js"],"names":["React","PropTypes","IconBar","styled","StyledView","View","dir","BackgroundIcons","ColoredIcons","percentage","Rating","rated","totalCount","ratingColor","ratingBackgroundColor","size","icon","marginBetweenRatingIcon","readonly","onIconTap","direction","type","selectedIconImage","emptyIconImage","Array","from","length","_","i","defaultProps","propTypes","number","string","bool","func","oneOf","node"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport IconBar from \"./components/IconBar\";\nimport styled from \"styled-components/native\";\n\nconst StyledView = styled.View`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: ${({ dir }) => `${dir}`};\n`;\nconst BackgroundIcons = styled.View`\n  display: flex;\n  position: relative;\n  flex-direction: ${({ dir }) => `${dir}`};\n`;\nconst ColoredIcons = styled.View`\n  display: flex;\n  overflow: hidden;\n  position: absolute;\n  flex-direction: ${({ dir }) => `${dir}`};\n  width: ${({ percentage, dir }) =>\n    dir === \"column\" || dir === \"column-reverse\" ? `100%` : `${percentage}%`};\n  height: ${({ percentage, dir }) =>\n    dir === \"row\" || dir === \"row-reverse\" ? `100%` : `${percentage}%`};\n\n  top: ${({ dir }) => (dir === \"column\" ? 0 : \"auto\")};\n  bottom: ${({ dir }) => (dir === \"column-reverse\" ? 0 : \"auto\")};\n`;\n\nconst Rating = ({\n  rated,\n  totalCount,\n  ratingColor,\n  ratingBackgroundColor,\n  size,\n  icon,\n  marginBetweenRatingIcon,\n  readonly,\n  onIconTap,\n  direction,\n  type,\n  selectedIconImage,\n  emptyIconImage,\n}) => {\n  const percentage = (rated / totalCount) * 100;\n\n  return (\n    <StyledView\n      dir={direction}\n      accessible={!readonly}\n      importantForAccessibility={!readonly ? \"yes\" : \"no\"}\n    >\n      <BackgroundIcons dir={direction}>\n        {Array.from({ length: totalCount }, (_, i) => (\n          <IconBar\n            isAccessible\n            name={icon}\n            key={`bgstar_${i}`}\n            size={size}\n            position={i}\n            color={ratingBackgroundColor}\n            margin={marginBetweenRatingIcon}\n            onIconTap={onIconTap}\n            readonly={readonly}\n            type={type}\n            selectedIconImage={selectedIconImage}\n            emptyIconImage={emptyIconImage}\n            totalCount={totalCount}\n          />\n        ))}\n        <ColoredIcons percentage={percentage} dir={direction}>\n          {Array.from({ length: totalCount }, (_, i) => (\n            <IconBar\n              filled\n              name={icon}\n              key={`cstar_${i}`}\n              size={size}\n              position={i}\n              color={ratingColor}\n              margin={marginBetweenRatingIcon}\n              onIconTap={onIconTap}\n              readonly={readonly}\n              type={type}\n              selectedIconImage={selectedIconImage}\n              emptyIconImage={emptyIconImage}\n              totalCount={totalCount}\n            />\n          ))}\n        </ColoredIcons>\n      </BackgroundIcons>\n    </StyledView>\n  );\n};\n\nRating.defaultProps = {\n  rated: 0,\n  totalCount: 5,\n  ratingColor: \"#f1c644\",\n  ratingBackgroundColor: \"#d4d4d4\",\n  size: 12,\n  icon: \"ios-star\",\n  marginBetweenRatingIcon: 1,\n  readonly: false,\n  direction: \"row\",\n  type: \"icon\",\n};\n\nRating.propTypes = {\n  rated: PropTypes.number,\n  totalCount: PropTypes.number,\n  ratingColor: PropTypes.string,\n  ratingBackgroundColor: PropTypes.string,\n  size: PropTypes.number,\n  icon: PropTypes.string,\n  marginBetweenRatingIcon: PropTypes.number,\n  readonly: PropTypes.bool,\n  onIconTap: PropTypes.func,\n  direction: PropTypes.oneOf([\n    \"row\",\n    \"row-reverse\",\n    \"column\",\n    \"column-reverse\",\n  ]),\n  type: PropTypes.oneOf([\"icon\", \"custom\"]),\n  selectedIconImage: PropTypes.node,\n  emptyIconImage: PropTypes.node,\n};\n\nexport default Rating;\n"]},"metadata":{},"sourceType":"module"}