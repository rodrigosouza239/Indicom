{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/home/bayons/indicom-app-master/app/pages/Login/RecuperarSenha.jsx\";\nimport React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport Styles from \"./styles\";\nimport Button from \"../../components/Button\";\nimport Input from \"../../components/Input\";\nimport Logo from \"../../../assets/img/logo.png\";\nvar styles = StyleSheet.create(Styles);\n\nvar RecuperarSenha = function RecuperarSenha() {\n  var navigation = useNavigation();\n\n  var handleRecover = function handleRecover() {\n    return _regeneratorRuntime.async(function handleRecover$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            Alert.alert('Sucesso', 'Um email foi enviado com as informações para recuperar sua senha');\n            return _context.abrupt(\"return\", navigation.navigate('LoginManual'));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      width: '100%',\n      marginTop: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, React.createElement(KeyboardAwareScrollView, {\n    resetScrollToCoords: {\n      x: 0,\n      y: 0\n    },\n    style: {\n      backgroundColor: '#FFFEAB'\n    },\n    scrollEnabled: false,\n    keyboardOpeningTime: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    source: Logo,\n    style: styles.imageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"A melhor plataforma comercial de indica\\xE7\\xE3o online!\"), React.createElement(Text, {\n    style: styles.subTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Recuperar Senha\"), React.createElement(Formik, {\n    initialValues: {\n      email: ''\n    },\n    onSubmit: function onSubmit(data) {\n      return handleRecover(data);\n    },\n    validationSchema: yup.object().shape({\n      email: yup.string().email().required()\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, function (_ref) {\n    var handleChange = _ref.handleChange,\n        handleBlur = _ref.handleBlur,\n        handleSubmit = _ref.handleSubmit,\n        values = _ref.values,\n        errors = _ref.errors,\n        isValid = _ref.isValid;\n    return React.createElement(View, {\n      style: styles.socialMediaContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, React.createElement(Input, {\n      onChangeText: handleChange('email'),\n      onBlur: handleBlur('email'),\n      placeholder: \"E-mail cadastrado...\",\n      keyboardType: \"email-address\",\n      textContentType: \"emailAddress\",\n      customStyle: {\n        marginBottom: 13\n      },\n      error: errors.email,\n      value: values.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }\n    }), React.createElement(Button, {\n      onPress: handleSubmit,\n      disabled: !isValid,\n      customStyles: {\n        backgroundColor: '#FFD500',\n        marginBottom: 13\n      },\n      textColor: \"#000\",\n      label: \"Enviar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }));\n  })))));\n};\n\nexport default RecuperarSenha;","map":{"version":3,"sources":["/home/bayons/indicom-app-master/app/pages/Login/RecuperarSenha.jsx"],"names":["React","useNavigation","KeyboardAwareScrollView","Formik","yup","Styles","Button","Input","Logo","styles","StyleSheet","create","RecuperarSenha","navigation","handleRecover","Alert","alert","navigate","wrapper","width","marginTop","x","y","backgroundColor","imageContainer","subTitle","email","data","object","shape","string","required","handleChange","handleBlur","handleSubmit","values","errors","isValid","socialMediaContainer","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { StyleSheet, View, Text, Image, ScrollView, Alert } from 'react-native';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport Styles from './styles';\n\nimport Button from '../../components/Button';\nimport Input from '../../components/Input';\n\nimport Logo from '../../../assets/img/logo.png';\n\nconst styles = StyleSheet.create(Styles);\n\nconst RecuperarSenha = () => {\n  const navigation = useNavigation();\n\n  const handleRecover = async () => {\n    Alert.alert(\n      'Sucesso',\n      'Um email foi enviado com as informações para recuperar sua senha'\n    );\n\n    return navigation.navigate('LoginManual');\n  };\n\n  return (\n    <View style={styles.wrapper}>\n      <ScrollView style={{ width: '100%', marginTop: 30 }}>\n        <KeyboardAwareScrollView\n          resetScrollToCoords={{ x: 0, y: 0 }}\n          style={{ backgroundColor: '#FFFEAB' }}\n          scrollEnabled={false}\n          keyboardOpeningTime={0}\n        >\n          <View style={styles.wrapper}>\n            <Image source={Logo} style={styles.imageContainer} />\n            <Text>A melhor plataforma comercial de indicação online!</Text>\n            <Text style={styles.subTitle}>Recuperar Senha</Text>\n            <Formik\n              initialValues={{ email: '' }}\n              onSubmit={(data) => handleRecover(data)}\n              validationSchema={yup.object().shape({\n                email: yup.string().email().required(),\n              })}\n            >\n              {({\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                values,\n                errors,\n                isValid,\n              }) => (\n                <View style={styles.socialMediaContainer}>\n                  <Input\n                    onChangeText={handleChange('email')}\n                    onBlur={handleBlur('email')}\n                    placeholder=\"E-mail cadastrado...\"\n                    keyboardType=\"email-address\"\n                    textContentType=\"emailAddress\"\n                    customStyle={{ marginBottom: 13 }}\n                    error={errors.email}\n                    value={values.email}\n                  />\n                  <Button\n                    onPress={handleSubmit}\n                    disabled={!isValid}\n                    customStyles={{\n                      backgroundColor: '#FFD500',\n                      marginBottom: 13,\n                    }}\n                    textColor=\"#000\"\n                    label=\"Enviar\"\n                  />\n                </View>\n              )}\n            </Formik>\n          </View>\n        </KeyboardAwareScrollView>\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default RecuperarSenha;\n"]},"metadata":{},"sourceType":"module"}