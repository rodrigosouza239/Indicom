{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/bayons/indicom-app-master/app/components/Select.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport RNPickerSelect from 'react-native-picker-select';\nvar styles = StyleSheet.create({\n  container: {\n    borderWidth: 1,\n    borderColor: 'rgba(0, 0, 0, 0.25)',\n    borderRadius: 8,\n    backgroundColor: '#fff',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  pickerCustom: {\n    flex: 1,\n    padding: 15,\n    width: 250\n  },\n  icon: {\n    marginRight: 15\n  }\n});\n\nvar Select = function Select(props) {\n  var customStyle = props.customStyle,\n      error = props.error;\n  return React.createElement(View, {\n    style: _objectSpread(_objectSpread(_objectSpread({}, styles.container), customStyle), {}, {\n      borderColor: error ? 'red' : 'rgba(0, 0, 0, 0.25)',\n      borderWidth: error ? 2 : 1\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(RNPickerSelect, _extends({\n    useNativeAndroidPickerStyle: false,\n    touchableWrapperProps: {\n      style: styles.pickerCustom\n    }\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  })), Platform.OS === 'ios' && React.createElement(Icon, {\n    style: styles.icon,\n    name: \"angle-down\",\n    size: 20,\n    color: \"#000\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Select;","map":{"version":3,"sources":["/home/bayons/indicom-app-master/app/components/Select.jsx"],"names":["React","Icon","RNPickerSelect","styles","StyleSheet","create","container","borderWidth","borderColor","borderRadius","backgroundColor","flexDirection","justifyContent","alignItems","pickerCustom","flex","padding","width","icon","marginRight","Select","props","customStyle","error","style","Platform","OS"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,IAAP;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,WAAW,EAAE,CADJ;AAETC,IAAAA,WAAW,EAAE,qBAFJ;AAGTC,IAAAA,YAAY,EAAE,CAHL;AAITC,IAAAA,eAAe,EAAE,MAJR;AAKTC,IAAAA,aAAa,EAAE,KALN;AAMTC,IAAAA,cAAc,EAAE,eANP;AAOTC,IAAAA,UAAU,EAAE;AAPH,GADoB;AAU/BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAE,CADM;AAEZC,IAAAA,OAAO,EAAE,EAFG;AAGZC,IAAAA,KAAK,EAAE;AAHK,GAViB;AAe/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,WAAW,EAAE;AADT;AAfyB,CAAlB,CAAf;;AAoBA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAAA,MAChBC,WADgB,GACOD,KADP,CAChBC,WADgB;AAAA,MACHC,KADG,GACOF,KADP,CACHE,KADG;AAExB,SACE,oBAAC,IAAD;AACE,IAAA,KAAK,gDACApB,MAAM,CAACG,SADP,GAEAgB,WAFA;AAGHd,MAAAA,WAAW,EAAEe,KAAK,GAAG,KAAH,GAAW,qBAH1B;AAIHhB,MAAAA,WAAW,EAAEgB,KAAK,GAAG,CAAH,GAAO;AAJtB,MADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,cAAD;AACE,IAAA,2BAA2B,EAAE,KAD/B;AAEE,IAAA,qBAAqB,EAAE;AAAEC,MAAAA,KAAK,EAAErB,MAAM,CAACW;AAAhB;AAFzB,KAGMO,KAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KARF,EAaGI,QAAQ,CAACC,EAAT,KAAgB,KAAhB,IACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvB,MAAM,CAACe,IAApB;AAA0B,IAAA,IAAI,EAAC,YAA/B;AAA4C,IAAA,IAAI,EAAE,EAAlD;AAAsD,IAAA,KAAK,EAAC,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,CADF;AAmBD,CArBD;;AAuBA,eAAeE,MAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, View, Platform } from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome5';\nimport RNPickerSelect from 'react-native-picker-select';\n\nconst styles = StyleSheet.create({\n  container: {\n    borderWidth: 1,\n    borderColor: 'rgba(0, 0, 0, 0.25)',\n    borderRadius: 8,\n    backgroundColor: '#fff',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  pickerCustom: {\n    flex: 1,\n    padding: 15,\n    width: 250,\n  },\n  icon: {\n    marginRight: 15,\n  },\n});\n\nconst Select = (props) => {\n  const { customStyle, error } = props;\n  return (\n    <View\n      style={{\n        ...styles.container,\n        ...customStyle,\n        borderColor: error ? 'red' : 'rgba(0, 0, 0, 0.25)',\n        borderWidth: error ? 2 : 1,\n      }}\n    >\n      <RNPickerSelect\n        useNativeAndroidPickerStyle={false}\n        touchableWrapperProps={{ style: styles.pickerCustom }}\n        {...props}\n      />\n      {Platform.OS === 'ios' && (\n        <Icon style={styles.icon} name=\"angle-down\" size={20} color=\"#000\" />\n      )}\n    </View>\n  );\n};\n\nexport default Select;\n"]},"metadata":{},"sourceType":"module"}