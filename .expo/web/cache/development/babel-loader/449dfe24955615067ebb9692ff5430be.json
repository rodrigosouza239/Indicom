{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/rodrigo/indicom/app/components/ButtonConvidar.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nvar styles = StyleSheet.create({\n  wrapper: {\n    padding: 10,\n    borderRadius: 15\n  }\n});\n\nvar Button = function Button(props) {\n  var label = props.label,\n      customStyles = props.customStyles,\n      textColor = props.textColor,\n      textWeigth = props.textWeigth,\n      fontSize = props.fontSize,\n      onPress = props.onPress,\n      disabled = props.disabled,\n      loading = props.loading,\n      loadingStyle = props.loadingStyle;\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: onPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: _objectSpread(_objectSpread(_objectSpread({}, styles.wrapper), customStyles), {}, {\n      opacity: disabled ? 0.3 : 1\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, loading ? React.createElement(ActivityIndicator, _extends({}, loadingStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  })) : React.createElement(Text, {\n    style: {\n      fontSize: fontSize || 14,\n      color: textColor || '#fff',\n      fontWeight: textWeigth || 'normal',\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, label)));\n};\n\nexport default Button;","map":{"version":3,"sources":["/Users/rodrigo/indicom/app/components/ButtonConvidar.jsx"],"names":["React","styles","StyleSheet","create","wrapper","padding","borderRadius","Button","props","label","customStyles","textColor","textWeigth","fontSize","onPress","disabled","loading","loadingStyle","opacity","color","fontWeight","textAlign"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AASA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE,EADF;AAEPC,IAAAA,YAAY,EAAE;AAFP;AADsB,CAAlB,CAAf;;AAOA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAAA,MAEtBC,KAFsB,GAWpBD,KAXoB,CAEtBC,KAFsB;AAAA,MAGtBC,YAHsB,GAWpBF,KAXoB,CAGtBE,YAHsB;AAAA,MAItBC,SAJsB,GAWpBH,KAXoB,CAItBG,SAJsB;AAAA,MAKtBC,UALsB,GAWpBJ,KAXoB,CAKtBI,UALsB;AAAA,MAMtBC,QANsB,GAWpBL,KAXoB,CAMtBK,QANsB;AAAA,MAOtBC,OAPsB,GAWpBN,KAXoB,CAOtBM,OAPsB;AAAA,MAQtBC,QARsB,GAWpBP,KAXoB,CAQtBO,QARsB;AAAA,MAStBC,OATsB,GAWpBR,KAXoB,CAStBQ,OATsB;AAAA,MAUtBC,YAVsB,GAWpBT,KAXoB,CAUtBS,YAVsB;AAYxB,SACE,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAEH,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,KAAK,gDACAb,MAAM,CAACG,OADP,GAEAM,YAFA;AAGHQ,MAAAA,OAAO,EAAEH,QAAQ,GAAG,GAAH,GAAS;AAHvB,MADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGC,OAAO,GACN,oBAAC,iBAAD,eAAuBC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADM,GAGN,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLJ,MAAAA,QAAQ,EAAEA,QAAQ,IAAI,EADjB;AAELM,MAAAA,KAAK,EAAER,SAAS,IAAI,MAFf;AAGLS,MAAAA,UAAU,EAAER,UAAU,IAAI,QAHrB;AAILS,MAAAA,SAAS,EAAE;AAJN,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGZ,KARH,CAVJ,CADF,CADF;AA0BD,CAtCD;;AAwCA,eAAeF,MAAf","sourcesContent":["import React from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TouchableWithoutFeedback,\n  ActivityIndicator,\n} from 'react-native';\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    padding: 10,\n    borderRadius: 15,\n  },\n});\n\nconst Button = (props) => {\n  const {\n    label,\n    customStyles,\n    textColor,\n    textWeigth,\n    fontSize,\n    onPress,\n    disabled,\n    loading,\n    loadingStyle,\n  } = props;\n  return (\n    <TouchableWithoutFeedback onPress={onPress}>\n      <View\n        style={{\n          ...styles.wrapper,\n          ...customStyles,\n          opacity: disabled ? 0.3 : 1,\n        }}\n      >\n        {loading ? (\n          <ActivityIndicator {...loadingStyle} />\n        ) : (\n          <Text\n            style={{\n              fontSize: fontSize || 14,\n              color: textColor || '#fff',\n              fontWeight: textWeigth || 'normal',\n              textAlign: 'center',\n            }}\n          >\n            {label}\n          </Text>\n        )}\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}