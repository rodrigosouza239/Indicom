{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/rodrigo/indicom/app/pages/Login/RecuperarSenha.jsx\";\nimport React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as Linking from 'expo-linking';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport Styles from \"./styles\";\nimport Api from \"../../services/Api\";\nimport Button from \"../../components/Button\";\nimport Input from \"../../components/Input\";\nimport ApplicationContext from \"../../contexts/application\";\nimport Logo from \"../../../assets/img/logo.png\";\nvar styles = StyleSheet.create(Styles);\n\nvar RecuperarSenha = function RecuperarSenha() {\n  var navigation = useNavigation();\n\n  var _React$useContext = React.useContext(ApplicationContext),\n      setLoading = _React$useContext.setLoading;\n\n  var handleRecover = function handleRecover(data) {\n    var redirectUrl, response;\n    return _regeneratorRuntime.async(function handleRecover$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            redirectUrl = Linking.makeUrl('/app/pages/Login/NovaSenha.jsx', {\n              queryParams: JSON.stringify({\n                nameRoute: \"NovaSenha\",\n                code: 'CODEPLACEHOLDER'\n              })\n            });\n            setLoading(true);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(Api.post(\"v1/recovery-password\", {\n              email: data.email,\n              url: redirectUrl\n            }));\n\n          case 4:\n            response = _context.sent;\n            setLoading(false);\n\n            if (!(response.status != 200)) {\n              _context.next = 10;\n              break;\n            }\n\n            Alert.alert('Atenção', \"Erro ao tentar recuperar senha, verifique se o e-mail está correto\");\n            _context.next = 12;\n            break;\n\n          case 10:\n            Alert.alert('Sucesso', \"Instruções para redefinição de senha enviados para o e-mail informado\");\n            return _context.abrupt(\"return\", navigation.navigate('LoginManual'));\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      width: '100%',\n      marginTop: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(KeyboardAwareScrollView, {\n    resetScrollToCoords: {\n      x: 0,\n      y: 0\n    },\n    style: {\n      backgroundColor: '#FFFEAB'\n    },\n    scrollEnabled: false,\n    keyboardOpeningTime: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    source: Logo,\n    style: styles.imageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"A melhor plataforma comercial de indica\\xE7\\xE3o online!\"), React.createElement(Text, {\n    style: styles.subTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Recuperar Senha\"), React.createElement(Formik, {\n    initialValues: {\n      email: ''\n    },\n    onSubmit: function onSubmit(data) {\n      return handleRecover(data);\n    },\n    validationSchema: yup.object().shape({\n      email: yup.string().email().required()\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, function (_ref) {\n    var handleChange = _ref.handleChange,\n        handleBlur = _ref.handleBlur,\n        handleSubmit = _ref.handleSubmit,\n        values = _ref.values,\n        errors = _ref.errors,\n        isValid = _ref.isValid;\n    return React.createElement(View, {\n      style: styles.socialMediaContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, React.createElement(Input, {\n      onChangeText: handleChange('email'),\n      onBlur: handleBlur('email'),\n      placeholder: \"E-mail cadastrado...\",\n      keyboardType: \"email-address\",\n      textContentType: \"emailAddress\",\n      customStyle: {\n        marginBottom: 13\n      },\n      error: errors.email,\n      value: values.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }), React.createElement(Button, {\n      onPress: handleSubmit,\n      disabled: !isValid,\n      customStyles: {\n        backgroundColor: '#FFD500',\n        marginBottom: 13\n      },\n      textColor: \"#000\",\n      label: \"Enviar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }));\n  })))));\n};\n\nexport default RecuperarSenha;","map":{"version":3,"sources":["/Users/rodrigo/indicom/app/pages/Login/RecuperarSenha.jsx"],"names":["React","useNavigation","Linking","KeyboardAwareScrollView","Formik","yup","Styles","Api","Button","Input","ApplicationContext","Logo","styles","StyleSheet","create","RecuperarSenha","navigation","useContext","setLoading","handleRecover","data","redirectUrl","makeUrl","queryParams","JSON","stringify","nameRoute","code","post","email","url","response","status","Alert","alert","navigate","wrapper","width","marginTop","x","y","backgroundColor","imageContainer","subTitle","object","shape","string","required","handleChange","handleBlur","handleSubmit","values","errors","isValid","socialMediaContainer","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { StyleSheet, View, Text, Image, ScrollView, Alert } from 'react-native';\nimport * as Linking from 'expo-linking'\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport Styles from './styles';\nimport Api from '../../services/Api';\n\nimport Button from '../../components/Button';\nimport Input from '../../components/Input';\nimport ApplicationContext from '../../contexts/application';\n\nimport Logo from '../../../assets/img/logo.png';\n\nconst styles = StyleSheet.create(Styles);\n\nconst RecuperarSenha = () => {\n  const navigation = useNavigation();\n  const { setLoading } = React.useContext(ApplicationContext);\n\n  const handleRecover = async (data) => {\n    let redirectUrl = Linking.makeUrl('/app/pages/Login/NovaSenha.jsx', {\n      queryParams: JSON.stringify({\n        nameRoute: \"NovaSenha\",\n        code: 'CODEPLACEHOLDER',\n      })\n    });\n    setLoading(true);\n    const response = await Api.post(`v1/recovery-password`, {\n      email: data.email,\n      url: redirectUrl\n    });\n    setLoading(false);\n    if (response.status != 200) {\n      Alert.alert(\n        'Atenção',\n        \"Erro ao tentar recuperar senha, verifique se o e-mail está correto\"\n      );\n    } else {\n      Alert.alert(\n        'Sucesso',\n        \"Instruções para redefinição de senha enviados para o e-mail informado\"\n      );\n\n      return navigation.navigate('LoginManual');\n    }\n\n  };\n\n  return (\n    <View style={styles.wrapper}>\n      <ScrollView style={{ width: '100%', marginTop: 30 }}>\n        <KeyboardAwareScrollView\n          resetScrollToCoords={{ x: 0, y: 0 }}\n          style={{ backgroundColor: '#FFFEAB' }}\n          scrollEnabled={false}\n          keyboardOpeningTime={0}\n        >\n          <View style={styles.wrapper}>\n            <Image source={Logo} style={styles.imageContainer} />\n            <Text>A melhor plataforma comercial de indicação online!</Text>\n            <Text style={styles.subTitle}>Recuperar Senha</Text>\n            <Formik\n              initialValues={{ email: '' }}\n              onSubmit={(data) => handleRecover(data)}\n              validationSchema={yup.object().shape({\n                email: yup.string().email().required(),\n              })}\n            >\n              {({\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                values,\n                errors,\n                isValid,\n              }) => (\n                <View style={styles.socialMediaContainer}>\n                  <Input\n                    onChangeText={handleChange('email')}\n                    onBlur={handleBlur('email')}\n                    placeholder=\"E-mail cadastrado...\"\n                    keyboardType=\"email-address\"\n                    textContentType=\"emailAddress\"\n                    customStyle={{ marginBottom: 13 }}\n                    error={errors.email}\n                    value={values.email}\n                  />\n                  <Button\n                    onPress={handleSubmit}\n                    disabled={!isValid}\n                    customStyles={{\n                      backgroundColor: '#FFD500',\n                      marginBottom: 13,\n                    }}\n                    textColor=\"#000\"\n                    label=\"Enviar\"\n                  />\n                </View>\n              )}\n            </Formik>\n          </View>\n        </KeyboardAwareScrollView>\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default RecuperarSenha;\n"]},"metadata":{},"sourceType":"module"}